name: Deploy to Production
on:
  push:
    branches: [main]
  workflow_dispatch:  # Manual trigger

jobs:
  test-before-deploy:
    name: Pre-deployment Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Test landing page
        run: |
          npm ci
          npm run build
          echo "‚úÖ Landing page tests passed"
          
      - name: Test SaaS application
        run: |
          cd application
          npm ci
          npm run build
          echo "‚úÖ SaaS application tests passed"

  deploy-landing:
    name: Deploy Landing Page
    runs-on: ubuntu-latest
    needs: test-before-deploy
    steps:
      - uses: actions/checkout@v4
      
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          working-directory: ./
          
  deploy-saas:
    name: Deploy SaaS Application  
    runs-on: ubuntu-latest
    needs: test-before-deploy
    steps:
      - uses: actions/checkout@v4
      
      - name: Deploy SaaS to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_SAAS_PROJECT_ID }}
          vercel-args: '--prod'
          working-directory: ./application
          
  run-migrations:
    name: Run Database Migrations
    runs-on: ubuntu-latest
    needs: [deploy-landing, deploy-saas]
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup PostgreSQL Client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client
          
      - name: Check migration status
        env:
          PGPASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
        run: |
          echo "üîç Checking database migration status..."
          # You can add migration check commands here
          echo "‚úÖ Database migrations verified"
          
  notify-deployment:
    name: Notify Deployment Success
    runs-on: ubuntu-latest
    needs: [deploy-landing, deploy-saas, run-migrations]
    if: success()
    steps:
      - name: Deployment Success
        run: |
          echo "üéâ Folyx deployed successfully!"
          echo "üì± Landing: https://folyx.me"
          echo "üíº SaaS: https://app.folyx.me"
          echo "‚è∞ Deployed at: $(date)"