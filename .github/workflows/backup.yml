name: Database Backup
on:
  schedule:
    - cron: '0 * * * *'  # Every hour at minute 0
  workflow_dispatch:     # Manual trigger

permissions:
  contents: write

jobs:
  backup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup PostgreSQL Client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client
        
      - name: Create backup directory
        run: mkdir -p backups
        
      - name: Export Database Backup
        env:
          PGPASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
        run: |
          TIMESTAMP=$(date +"%Y%m%d_%H%M%S")
          pg_dump -h aws-0-us-east-2.pooler.supabase.com \
                  -U postgres.vtzsgxpjrrjnmwtqmnah \
                  -d postgres \
                  -p 6543 \
                  --data-only \
                  --schema=public \
                  --no-owner \
                  --no-privileges > "backups/folyx_backup_$TIMESTAMP.sql"
          
      - name: Create backup info
        run: |
          TIMESTAMP=$(date +"%Y%m%d_%H%M%S")
          echo "Folyx Database Backup - $(date)" > "backups/backup_info_$TIMESTAMP.txt"
          echo "Tables: waitlist, profiles" >> "backups/backup_info_$TIMESTAMP.txt"
          echo "Size: $(du -h backups/folyx_backup_$TIMESTAMP.sql | cut -f1)" >> "backups/backup_info_$TIMESTAMP.txt"
          
      - name: Commit backups
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add backups/
          if [ -n "$(git status --porcelain)" ]; then
            git commit -m "Hourly database backup $(date +"%Y-%m-%d %H:%M")"
            git push
          else
            echo "No changes to commit"
          fi