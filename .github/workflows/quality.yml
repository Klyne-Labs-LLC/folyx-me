name: Code Quality
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Audit landing page dependencies
        run: |
          echo "üîç Checking landing page security..."
          AUDIT_RESULT=$(npm audit --audit-level=high --json || echo '{"vulnerabilities":{}}')
          HIGH_VULNS=$(echo "$AUDIT_RESULT" | grep -o '"high":[0-9]*' | cut -d':' -f2 || echo "0")
          if [ "$HIGH_VULNS" -gt 0 ]; then
            echo "‚ö†Ô∏è Found $HIGH_VULNS high-severity vulnerabilities"
          else
            echo "‚úÖ No high-severity vulnerabilities found"
          fi
          
      - name: Audit SaaS application dependencies
        run: |
          echo "üîç Checking SaaS app security..."
          cd application
          AUDIT_RESULT=$(npm audit --audit-level=high --json || echo '{"vulnerabilities":{}}')
          HIGH_VULNS=$(echo "$AUDIT_RESULT" | grep -o '"high":[0-9]*' | cut -d':' -f2 || echo "0")
          if [ "$HIGH_VULNS" -gt 0 ]; then
            echo "‚ö†Ô∏è Found $HIGH_VULNS high-severity vulnerabilities"
          else
            echo "‚úÖ No high-severity vulnerabilities found"
          fi

  bundle-analysis:
    name: Bundle Size Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Build and analyze landing page
        run: |
          npm ci
          npm run build
          BUNDLE_SIZE=$(du -sh dist | cut -f1)
          echo "üì¶ Landing page bundle size: $BUNDLE_SIZE"
          
      - name: Build and analyze SaaS app
        run: |
          cd application
          npm ci
          npm run build
          BUNDLE_SIZE=$(du -sh .next | cut -f1)
          echo "üì¶ SaaS app bundle size: $BUNDLE_SIZE"

  performance-check:
    name: Performance Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Build applications
        run: |
          npm ci && npm run build
          cd application && npm ci && npm run build
          
      - name: Performance analysis
        run: |
          echo "üöÄ Performance metrics:"
          echo "- Landing page build time: $(date)"
          echo "- SaaS app build time: $(date)"
          echo "‚úÖ Performance check completed"

  code-style:
    name: Code Style Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Check landing page code style
        run: |
          npm ci
          npm run lint
          echo "‚úÖ Landing page code style verified"
          
      - name: Check SaaS app code style
        run: |
          cd application
          npm ci  
          npm run lint
          echo "‚úÖ SaaS app code style verified"
          
      - name: TypeScript check
        run: |
          npx tsc --noEmit
          echo "‚úÖ TypeScript compilation verified"